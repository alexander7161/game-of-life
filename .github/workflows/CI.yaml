name: CI
on: push
jobs:
  test:
    name: Lint and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Use Node.js
        uses: actions/setup-node@master
        with:
          node-version: "10.x"
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        # if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Lint
        run: yarn lint
      # - name: Tests
      #   run: yarn run test
      # Skip until tests are written
      - name: TSC
        run: yarn run tsc
  build:
    if: github.ref == 'refs/heads/master'
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Use Node.js
        uses: actions/setup-node@master
        with:
          node-version: "10.x"
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        # if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Build
        run: yarn run build
      - uses: actions/upload-artifact@master
        if: github.ref == 'refs/heads/master'
        with:
          name: build
          path: build
  deploy:
    name: Deploy
    if: github.ref == 'refs/heads/master'
    needs: [test, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/download-artifact@master
        with:
          name: build
          path: build
      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          publish_dir: ./build
